{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "simple copy activity",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "SnowflakeSink",
						"importSettings": {
							"type": "SnowflakeImportCopyCommand"
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "linkedService1",
							"type": "LinkedServiceReference"
						},
						"path": "devc"
					},
					"dataIntegrationUnits": 2
				},
				"inputs": [
					{
						"referenceName": "DelimitedText1",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().globalParameters.adls_container",
								"type": "Expression"
							},
							"storage_account_url": {
								"value": "@pipeline().globalParameters.storage_accont",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SnowflakeTable1",
						"type": "DatasetReference",
						"parameters": {
							"account": {
								"value": "@pipeline().globalParameters.sf_account",
								"type": "Expression"
							},
							"username": {
								"value": "@pipeline().globalParameters.sf_username",
								"type": "Expression"
							},
							"database": {
								"value": "@pipeline().globalParameters.sf_database",
								"type": "Expression"
							},
							"warehouse": {
								"value": "@pipeline().globalParameters.sf_warehouse",
								"type": "Expression"
							},
							"role": {
								"value": "@pipeline().globalParameters.sf_role",
								"type": "Expression"
							},
							"table": {
								"value": "@pipeline().parameters.table",
								"type": "Expression"
							},
							"schema": {
								"value": "@pipeline().parameters.schema",
								"type": "Expression"
							},
							"kv_url": {
								"value": "@pipeline().globalParameters.kv_url",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"table": {
				"type": "string"
			},
			"schema": {
				"type": "string"
			}
		},
		"annotations": []
	}
}